name: Build and Deploy Dependencies Api with PM2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Verify secrets
        run: |
          echo "MongoDB URI: ${MONGO_URI:0:10}... (truncated)"
          echo "Base country URL: ${BASE_COUNTRY_URL:0:10}... (truncated)"
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin" # Specify the Java distribution
          java-package: "jdk"
          check-latest: false
          server-id: github
          server-username: ${{ secrets.GITHUB_ACTOR }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true

      - name: Create deployment application.properties file
        run: |
          mkdir -p src/main/resources  # Ensure the directory exists
          echo "spring.data.mongodb.uri=${{ secrets.MONGO_URI }}" > src/main/resources/application-${{ secrets.APP_ENV }}.properties
          echo "server.port=${{ secrets.APP_PORT }}" >> src/main/resources/application-${{ secrets.APP_ENV }}.properties

      - name: Build Application JAR
        run: ./mvnw clean package

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t metrobuzz-deps:latest .

      - name: Push Docker Image to Docker Hub
        run: docker tag metrobuzz-deps:latest ${{ secrets.DOCKER_USERNAME }}/metrobuzz-deps:latest && docker push ${{ secrets.DOCKER_USERNAME }}/metrobuzz-deps:latest

      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Node.js and PM2 if not already installed
            if ! command -v node &> /dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            if [ "$(docker ps -aq -f name=metrobuzz-deps-container)" ]; then
              docker stop metrobuzz-deps-container
              docker rm metrobuzz-deps-container
            fi

            # Pull the latest Docker image and restart the service
            docker pull ${{ secrets.DOCKER_USERNAME }}/metrobuzz-deps:latest
            pm2 start ecosystem.config.js --update-env
